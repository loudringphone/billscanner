# This "input" configures a global authorization rule to enable public access to
# all models in this schema. Learn more about authorization rules here: https://docs.amplify.aws/cli/graphql/authorization-rules
input AMPLIFY {
  globalAuthRule: AuthRule = { allow: public }
} # FOR TESTING ONLY!
type Image
  @model
  @key(fields: ["key"])
  @key(name: "ByOwner", fields: ["owner", "name"], queryField: "imagesByOwner")
  @auth(
    rules: [
      {
        allow: groups
        groups: ["Admin"]
        operations: [read, create, update, delete]
      }
      { allow: owner, operations: [read] }
    ]
  ) {
  key: ID!
  owner: ID!
  name: String!
  online: OnlineStatus!
  date: AWSDateTime!
  analysisResult: String
}
enum OnlineStatus {
  public
  private
}

type Subscription {
  onCreateImage(owner: ID): Image @aws_subscribe(mutations: ["createImage"])
  onUpdateImage(owner: ID): Image @aws_subscribe(mutations: ["updateImage"])
  onDeleteImage(owner: ID): Image @aws_subscribe(mutations: ["deleteImage"])
}

type Match
  @model
  @key(fields: ["id"])
  @key(
    name: "ByImageKey"
    fields: ["key", "name"]
    queryField: "matchByImageKey"
  )
  @key(
    name: "ByMatch"
    fields: ["owner", "online", "match", "name"]
    queryField: "imagesByMatch"
  )
  @auth(
    rules: [
      {
        allow: groups
        groups: ["Admin"]
        operations: [read, create, update, delete]
      }
      { allow: owner, operations: [read, create, update, delete] }
    ]
  ) {
  id: ID!
  key: ID!
  owner: ID!
  name: String!
  match: String!
  online: OnlineStatus!
  date: AWSDateTime!
}
